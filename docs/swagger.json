{
  "openapi": "3.0.3",
  "info": {
    "title": "Collections",
    "description": "Manage collections with a breeze",
    "version": "0.1"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/21162131/Collections-API/0.1",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:3000/api/v1"
    }
  ],
  "tags": [
    {
      "name": "Collections",
      "description": "Operations for managing collections"
    },
    {
      "name": "Categories",
      "description": "Operations for managing categories"
    },
    {
      "name": "Items",
      "description": "Operations for managing items"
    }
  ],
  "paths": {
    "/collections": {
      "get": {
        "tags": [
          "Collections"
        ],
        "description": "Get a list of available collections",
        "responses": {
          "200": {
            "description": "The list of collections",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Collection"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Collections"
        ],
        "description": "Create a new collection",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collections_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"Books\",\n    \"owner\": \"Martijn van Nieuwenhoven\",\n    \"logo\": \"/collections/books/assets/logo.png\",\n    \"brandColor\": \"#0283ff\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created collection object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "owner": "is required",
                      "logo": "is required",
                      "brandColor": "is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{id}": {
      "get": {
        "tags": [
          "Collections"
        ],
        "description": "Get a single collection object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the collection",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested collection object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "404": {
            "description": "When the collection object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Collections"
        ],
        "description": "Delete a single collection object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the collection",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "When successfully deleted",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "404": {
            "description": "When the collection object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Collections"
        ],
        "description": "Update a single collection object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the collection",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/collections_id_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"Books\",\n    \"owner\": \"Martijn van Nieuwenhoven\",\n    \"logo\": \"/collections/books/assets/logo.png\",\n    \"brandColor\": \"#0283ff\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated collection object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Collection"
                }
              }
            }
          },
          "404": {
            "description": "When the collection object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "owner": "is required",
                      "logo": "is required",
                      "brandColor": "is required"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{id}/categories": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Get a list of available categories",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the collection",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of categories",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories": {
      "post": {
        "tags": [
          "Categories"
        ],
        "description": "Create a new category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categories_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"Blue\",\n    \"collectionId\": 1\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created category object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "collectionId": "must be an integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/categories/{id}": {
      "get": {
        "tags": [
          "Categories"
        ],
        "description": "Get a single category object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested category object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "When the category object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Categories"
        ],
        "description": "Delete a single category object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "When successfully deleted",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "404": {
            "description": "When the category object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Categories"
        ],
        "description": "Update a single category object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the category",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/categories_id_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"Blue\",\n    \"collectionId\": 1\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated category object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "404": {
            "description": "When the category object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "collectionId": "must be an integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/collections/{id}/items": {
      "get": {
        "tags": [
          "Items"
        ],
        "description": "Get a list of available items",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the collection",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of items",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Item"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items": {
      "post": {
        "tags": [
          "Items"
        ],
        "description": "Create a new item",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/items_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"A blue item\",\n    \"collectionId\": 1,\n    \"categoryId\": 1,\n    \"img\": \"path/to/image.jpg\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "The newly created item object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "img": "is required",
                      "collectionId": "must be an integer",
                      "categoryId": "must be an integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/items/{id}": {
      "get": {
        "tags": [
          "Items"
        ],
        "description": "Get a single item object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The requested item object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "When the item object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Items"
        ],
        "description": "Delete a single item object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "When successfully deleted",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "404": {
            "description": "When the item object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object"
                },
                "example": {}
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Items"
        ],
        "description": "Update a single item object",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The unique identifier of the item",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/items_id_body"
              },
              "examples": {
                "0": {
                  "value": "{\n    \"name\": \"A blue item\",\n    \"collectionId\": 1,\n    \"categoryId\": 1,\n    \"img\": \"path/to/image.jpg\"\n}"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The updated item object",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "$ref": "#/components/schemas/Item"
                }
              }
            }
          },
          "404": {
            "description": "When the item object is not found",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {}
                }
              }
            }
          },
          "422": {
            "description": "When one or more parameters are invalid",
            "content": {
              "application/json; charset=utf-8": {
                "schema": {
                  "type": "object",
                  "example": {
                    "errors": {
                      "name": "is required",
                      "img": "is required",
                      "collectionId": "must be an integer",
                      "categoryId": "must be an integer"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Collection": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The collection unique identifier.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The collection name.",
            "example": "Books"
          },
          "owner": {
            "type": "string",
            "description": "The collection owner name.",
            "example": "Martijn"
          },
          "logo": {
            "type": "string",
            "description": "The relative path of the logo.",
            "example": "/collections/books/assets/logo.png"
          },
          "brandColor": {
            "type": "string",
            "description": "The brand color hex code.",
            "example": "#ff0088"
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The category unique identifier."
          },
          "collectionId": {
            "type": "integer",
            "description": "The collection unique identifier this category belongs to."
          },
          "name": {
            "type": "string",
            "description": "The category name."
          },
          "itemCount": {
            "type": "integer",
            "description": "The amount of items this category contains."
          }
        }
      },
      "Item": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The item unique identifier."
          },
          "collectionId": {
            "type": "integer",
            "description": "The collection unique identifier this item belongs to."
          },
          "categoryId": {
            "type": "integer",
            "description": "The category unique identifier this item belongs to."
          },
          "name": {
            "type": "string",
            "description": "The item name."
          },
          "img": {
            "type": "string",
            "description": "The relative path of the image."
          }
        }
      },
      "collections_body": {
        "required": [
          "brandColor",
          "logo",
          "name",
          "owner"
        ],
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "brandColor": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          }
        }
      },
      "collections_id_body": {
        "required": [
          "brandColor",
          "logo",
          "name",
          "owner"
        ],
        "type": "object",
        "properties": {
          "owner": {
            "type": "string"
          },
          "brandColor": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "logo": {
            "type": "string"
          }
        }
      },
      "categories_body": {
        "required": [
          "collectionId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "collectionId": {
            "type": "integer"
          }
        }
      },
      "categories_id_body": {
        "required": [
          "collectionId",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "collectionId": {
            "type": "integer"
          }
        }
      },
      "items_body": {
        "required": [
          "categoryId",
          "collectionId",
          "img",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "collectionId": {
            "type": "integer"
          },
          "categoryId": {
            "type": "integer"
          },
          "img": {
            "type": "string"
          }
        }
      },
      "items_id_body": {
        "required": [
          "categoryId",
          "collectionId",
          "img",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "collectionId": {
            "type": "integer"
          },
          "categoryId": {
            "type": "integer"
          },
          "img": {
            "type": "string"
          }
        }
      }
    }
  }
}